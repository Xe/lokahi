// Code generated by protoc-gen-go. DO NOT EDIT.
// source: lokahiadmin.proto

/*
Package lokahiadmin is a generated protocol buffer package.

lokahiadmin is the administrative/backend API for lokahi power usage.

It is generated from these files:
	lokahiadmin.proto

It has these top-level messages:
	CheckIDs
	RunRequest
	Health
	Run
	Nil
	Check
	WebhookData
*/
package lokahiadmin

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CheckIDs struct {
	Ids []string `protobuf:"bytes,1,rep,name=ids" json:"ids,omitempty"`
}

func (m *CheckIDs) Reset()                    { *m = CheckIDs{} }
func (m *CheckIDs) String() string            { return proto.CompactTextString(m) }
func (*CheckIDs) ProtoMessage()               {}
func (*CheckIDs) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CheckIDs) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

// RunRequest is a request for a healthcheck being run.
type RunRequest struct {
	Check *Check `protobuf:"bytes,1,opt,name=check" json:"check,omitempty"`
	RunId string `protobuf:"bytes,2,opt,name=run_id,json=runId" json:"run_id,omitempty"`
}

func (m *RunRequest) Reset()                    { *m = RunRequest{} }
func (m *RunRequest) String() string            { return proto.CompactTextString(m) }
func (*RunRequest) ProtoMessage()               {}
func (*RunRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RunRequest) GetCheck() *Check {
	if m != nil {
		return m.Check
	}
	return nil
}

func (m *RunRequest) GetRunId() string {
	if m != nil {
		return m.RunId
	}
	return ""
}

type Health struct {
	Url                     string `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	ResponseTimeNanoseconds int64  `protobuf:"varint,2,opt,name=response_time_nanoseconds,json=responseTimeNanoseconds" json:"response_time_nanoseconds,omitempty"`
	StatusCode              int32  `protobuf:"varint,3,opt,name=status_code,json=statusCode" json:"status_code,omitempty"`
	Body                    string `protobuf:"bytes,4,opt,name=body" json:"body,omitempty"`
	Error                   string `protobuf:"bytes,5,opt,name=error" json:"error,omitempty"`
	Healthy                 bool   `protobuf:"varint,6,opt,name=healthy" json:"healthy,omitempty"`
}

func (m *Health) Reset()                    { *m = Health{} }
func (m *Health) String() string            { return proto.CompactTextString(m) }
func (*Health) ProtoMessage()               {}
func (*Health) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Health) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Health) GetResponseTimeNanoseconds() int64 {
	if m != nil {
		return m.ResponseTimeNanoseconds
	}
	return 0
}

func (m *Health) GetStatusCode() int32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *Health) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *Health) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *Health) GetHealthy() bool {
	if m != nil {
		return m.Healthy
	}
	return false
}

type Run struct {
	Id                 string             `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Cids               *CheckIDs          `protobuf:"bytes,2,opt,name=cids" json:"cids,omitempty"`
	Finished           bool               `protobuf:"varint,3,opt,name=finished" json:"finished,omitempty"`
	Results            map[string]*Health `protobuf:"bytes,4,rep,name=results" json:"results,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	StartTimeUnix      int64              `protobuf:"varint,5,opt,name=start_time_unix,json=startTimeUnix" json:"start_time_unix,omitempty"`
	ElapsedNanoseconds int64              `protobuf:"varint,6,opt,name=elapsed_nanoseconds,json=elapsedNanoseconds" json:"elapsed_nanoseconds,omitempty"`
}

func (m *Run) Reset()                    { *m = Run{} }
func (m *Run) String() string            { return proto.CompactTextString(m) }
func (*Run) ProtoMessage()               {}
func (*Run) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Run) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Run) GetCids() *CheckIDs {
	if m != nil {
		return m.Cids
	}
	return nil
}

func (m *Run) GetFinished() bool {
	if m != nil {
		return m.Finished
	}
	return false
}

func (m *Run) GetResults() map[string]*Health {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *Run) GetStartTimeUnix() int64 {
	if m != nil {
		return m.StartTimeUnix
	}
	return 0
}

func (m *Run) GetElapsedNanoseconds() int64 {
	if m != nil {
		return m.ElapsedNanoseconds
	}
	return 0
}

type Nil struct {
}

func (m *Nil) Reset()                    { *m = Nil{} }
func (m *Nil) String() string            { return proto.CompactTextString(m) }
func (*Nil) ProtoMessage()               {}
func (*Nil) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

// Check is the database check structure.
// https://github.com/Xe/lokahi/blob/master/internal/database/check.go
type Check struct {
	Id            int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Uuid          string `protobuf:"bytes,2,opt,name=uuid" json:"uuid,omitempty"`
	CreatedAtUnix int64  `protobuf:"varint,3,opt,name=created_at_unix,json=createdAtUnix" json:"created_at_unix,omitempty"`
	EditedAtUnix  int64  `protobuf:"varint,4,opt,name=edited_at_unix,json=editedAtUnix" json:"edited_at_unix,omitempty"`
	Url           string `protobuf:"bytes,5,opt,name=url" json:"url,omitempty"`
	WebhookUrl    string `protobuf:"bytes,6,opt,name=webhook_url,json=webhookUrl" json:"webhook_url,omitempty"`
	Every         int32  `protobuf:"varint,7,opt,name=every" json:"every,omitempty"`
	PlaybookUrl   string `protobuf:"bytes,8,opt,name=playbook_url,json=playbookUrl" json:"playbook_url,omitempty"`
	State         string `protobuf:"bytes,9,opt,name=state" json:"state,omitempty"`
}

func (m *Check) Reset()                    { *m = Check{} }
func (m *Check) String() string            { return proto.CompactTextString(m) }
func (*Check) ProtoMessage()               {}
func (*Check) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Check) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Check) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Check) GetCreatedAtUnix() int64 {
	if m != nil {
		return m.CreatedAtUnix
	}
	return 0
}

func (m *Check) GetEditedAtUnix() int64 {
	if m != nil {
		return m.EditedAtUnix
	}
	return 0
}

func (m *Check) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Check) GetWebhookUrl() string {
	if m != nil {
		return m.WebhookUrl
	}
	return ""
}

func (m *Check) GetEvery() int32 {
	if m != nil {
		return m.Every
	}
	return 0
}

func (m *Check) GetPlaybookUrl() string {
	if m != nil {
		return m.PlaybookUrl
	}
	return ""
}

func (m *Check) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

type WebhookData struct {
	RunId  string  `protobuf:"bytes,1,opt,name=run_id,json=runId" json:"run_id,omitempty"`
	Check  *Check  `protobuf:"bytes,2,opt,name=check" json:"check,omitempty"`
	Health *Health `protobuf:"bytes,3,opt,name=health" json:"health,omitempty"`
}

func (m *WebhookData) Reset()                    { *m = WebhookData{} }
func (m *WebhookData) String() string            { return proto.CompactTextString(m) }
func (*WebhookData) ProtoMessage()               {}
func (*WebhookData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *WebhookData) GetRunId() string {
	if m != nil {
		return m.RunId
	}
	return ""
}

func (m *WebhookData) GetCheck() *Check {
	if m != nil {
		return m.Check
	}
	return nil
}

func (m *WebhookData) GetHealth() *Health {
	if m != nil {
		return m.Health
	}
	return nil
}

func init() {
	proto.RegisterType((*CheckIDs)(nil), "github.xe.lokahi.admin.CheckIDs")
	proto.RegisterType((*RunRequest)(nil), "github.xe.lokahi.admin.RunRequest")
	proto.RegisterType((*Health)(nil), "github.xe.lokahi.admin.Health")
	proto.RegisterType((*Run)(nil), "github.xe.lokahi.admin.Run")
	proto.RegisterType((*Nil)(nil), "github.xe.lokahi.admin.Nil")
	proto.RegisterType((*Check)(nil), "github.xe.lokahi.admin.Check")
	proto.RegisterType((*WebhookData)(nil), "github.xe.lokahi.admin.WebhookData")
}

func init() { proto.RegisterFile("lokahiadmin.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 664 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0xdd, 0x6e, 0xd3, 0x4a,
	0x10, 0x96, 0xe3, 0xd8, 0x49, 0xc6, 0x6d, 0xcf, 0x39, 0x7b, 0xce, 0x01, 0x13, 0x7e, 0x1a, 0x0c,
	0x42, 0xb9, 0x0a, 0x52, 0x5a, 0x21, 0xd4, 0x3b, 0xfa, 0x23, 0x88, 0x40, 0xbd, 0x58, 0x28, 0x54,
	0xbd, 0x89, 0x1c, 0xef, 0x40, 0x56, 0x71, 0xd7, 0x61, 0x7f, 0x4a, 0xf2, 0x18, 0x3c, 0x0f, 0x2f,
	0xc3, 0x7b, 0x70, 0x83, 0xbc, 0xeb, 0xb4, 0x46, 0x22, 0xad, 0xb8, 0xdb, 0x99, 0xf9, 0x66, 0x76,
	0xe6, 0xdb, 0x6f, 0x16, 0xfe, 0xc9, 0x8b, 0x59, 0x3a, 0xe5, 0x29, 0x3b, 0xe7, 0x62, 0x30, 0x97,
	0x85, 0x2e, 0xc8, 0xad, 0x4f, 0x5c, 0x4f, 0xcd, 0x64, 0xb0, 0xc0, 0x81, 0x0b, 0x0e, 0x6c, 0x34,
	0xb9, 0x07, 0xed, 0x83, 0x29, 0x66, 0xb3, 0xd1, 0xa1, 0x22, 0x7f, 0x83, 0xcf, 0x99, 0x8a, 0xbd,
	0x9e, 0xdf, 0xef, 0xd0, 0xf2, 0x98, 0x9c, 0x02, 0x50, 0x23, 0x28, 0x7e, 0x36, 0xa8, 0x34, 0xd9,
	0x81, 0x20, 0x2b, 0xb1, 0xb1, 0xd7, 0xf3, 0xfa, 0xd1, 0xf0, 0xfe, 0xe0, 0xf7, 0x35, 0x07, 0xb6,
	0x20, 0x75, 0x58, 0xf2, 0x3f, 0x84, 0xd2, 0x88, 0x31, 0x67, 0x71, 0xa3, 0xe7, 0xf5, 0x3b, 0x34,
	0x90, 0x46, 0x8c, 0x58, 0xf2, 0xcd, 0x83, 0xf0, 0x15, 0xa6, 0xb9, 0x9e, 0x96, 0xd7, 0x1a, 0x99,
	0xdb, 0xa2, 0x1d, 0x5a, 0x1e, 0xc9, 0x1e, 0xdc, 0x91, 0xa8, 0xe6, 0x85, 0x50, 0x38, 0xd6, 0xfc,
	0x1c, 0xc7, 0x22, 0x15, 0x85, 0xc2, 0xac, 0x10, 0x4c, 0xd9, 0x32, 0x3e, 0xbd, 0xbd, 0x02, 0xbc,
	0xe3, 0xe7, 0x78, 0x7c, 0x15, 0x26, 0xdb, 0x10, 0x29, 0x9d, 0x6a, 0xa3, 0xc6, 0x59, 0xc1, 0x30,
	0xf6, 0x7b, 0x5e, 0x3f, 0xa0, 0xe0, 0x5c, 0x07, 0x05, 0x43, 0x42, 0xa0, 0x39, 0x29, 0xd8, 0x32,
	0x6e, 0xda, 0xfb, 0xec, 0x99, 0xfc, 0x07, 0x01, 0x4a, 0x59, 0xc8, 0x38, 0x70, 0x3d, 0x5a, 0x83,
	0xc4, 0xd0, 0x9a, 0xda, 0x16, 0x97, 0x71, 0xd8, 0xf3, 0xfa, 0x6d, 0xba, 0x32, 0x93, 0xef, 0x0d,
	0xf0, 0xa9, 0x11, 0x64, 0x0b, 0x1a, 0x9c, 0x55, 0x9d, 0x37, 0x38, 0x23, 0xbb, 0xd0, 0xcc, 0x78,
	0xd5, 0x63, 0x34, 0xec, 0x5d, 0x4b, 0xd0, 0xe8, 0x50, 0x51, 0x8b, 0x26, 0x5d, 0x68, 0x7f, 0xe4,
	0x82, 0xab, 0x29, 0x32, 0xdb, 0x6f, 0x9b, 0x5e, 0xda, 0x64, 0x1f, 0x5a, 0x12, 0x95, 0xc9, 0xb5,
	0x8a, 0x9b, 0x3d, 0xbf, 0x1f, 0x0d, 0xfb, 0xeb, 0x8a, 0x52, 0x23, 0x06, 0xd4, 0x41, 0x8f, 0x84,
	0x96, 0x4b, 0xba, 0x4a, 0x24, 0x4f, 0xe0, 0x2f, 0xa5, 0x53, 0xa9, 0x1d, 0x97, 0x46, 0xf0, 0x85,
	0x9d, 0xd3, 0xa7, 0x9b, 0xd6, 0x5d, 0x32, 0x78, 0x22, 0xf8, 0x82, 0x3c, 0x85, 0x7f, 0x31, 0x4f,
	0xe7, 0x0a, 0xd9, 0x2f, 0x84, 0x87, 0x16, 0x4b, 0xaa, 0x50, 0x8d, 0xeb, 0xee, 0x19, 0x6c, 0xd4,
	0x6f, 0x2c, 0x5f, 0x72, 0x86, 0xcb, 0xd5, 0x4b, 0xce, 0x70, 0x49, 0x76, 0x21, 0xb8, 0x48, 0x73,
	0x83, 0x15, 0x23, 0x0f, 0xd6, 0x35, 0xef, 0xa4, 0x40, 0x1d, 0x78, 0xaf, 0xf1, 0xdc, 0x4b, 0x02,
	0xf0, 0x8f, 0x79, 0x9e, 0xfc, 0xf0, 0x20, 0xb0, 0x74, 0xd5, 0xb8, 0x0e, 0x2c, 0xd7, 0x04, 0x9a,
	0xc6, 0x5c, 0xca, 0xca, 0x9e, 0xcb, 0x49, 0x33, 0x89, 0xa9, 0x46, 0x36, 0x4e, 0xb5, 0x9b, 0xd4,
	0x77, 0x93, 0x56, 0xee, 0x17, 0xda, 0x4e, 0xfa, 0x18, 0xb6, 0x90, 0xf1, 0x3a, 0xac, 0x69, 0x61,
	0x1b, 0xce, 0x5b, 0xa1, 0x2a, 0x61, 0x06, 0x57, 0xc2, 0xdc, 0x86, 0xe8, 0x0b, 0x4e, 0xa6, 0x45,
	0x31, 0x1b, 0x97, 0x91, 0xd0, 0x46, 0xa0, 0x72, 0x9d, 0xc8, 0xdc, 0x0a, 0xe9, 0x02, 0xe5, 0x32,
	0x6e, 0xd9, 0x3e, 0x9d, 0x41, 0x1e, 0xc2, 0xc6, 0x3c, 0x4f, 0x97, 0x93, 0x55, 0x5e, 0xdb, 0xe6,
	0x45, 0x2b, 0x5f, 0x95, 0x58, 0x6a, 0x14, 0xe3, 0x8e, 0x53, 0xa0, 0x35, 0x92, 0xaf, 0x1e, 0x44,
	0x1f, 0x5c, 0xf5, 0xc3, 0x54, 0xa7, 0xb5, 0x65, 0xf2, 0x6a, 0xcb, 0x74, 0xb5, 0x98, 0x8d, 0x3f,
	0x58, 0xcc, 0x67, 0x10, 0x3a, 0x39, 0x5b, 0x8a, 0x6e, 0x7e, 0x9b, 0x0a, 0x3d, 0x7c, 0x0b, 0x6d,
	0x6a, 0xc4, 0x9b, 0x22, 0x4b, 0x73, 0xf2, 0x12, 0x42, 0x5b, 0x53, 0x91, 0x1b, 0xb5, 0xde, 0xbd,
	0x7b, 0x8d, 0x70, 0x87, 0xa7, 0x10, 0xb9, 0x6b, 0xdc, 0x5b, 0x8f, 0xdc, 0x7a, 0x25, 0xd7, 0xa4,
	0x54, 0x9f, 0x52, 0xf7, 0x86, 0xb6, 0x87, 0xef, 0xa1, 0x55, 0x31, 0x48, 0x5e, 0x43, 0xeb, 0x68,
	0x81, 0x99, 0xd1, 0x48, 0x1e, 0xad, 0xcb, 0xaa, 0xb1, 0xbd, 0xbe, 0xe3, 0x63, 0x9e, 0xef, 0x6f,
	0x9e, 0x45, 0xb5, 0x5f, 0x76, 0x12, 0xda, 0x6f, 0x76, 0xe7, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x94, 0xf5, 0xc3, 0x18, 0x7b, 0x05, 0x00, 0x00,
}
